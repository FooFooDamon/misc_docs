线性表：
	顺序存储：
		意义：（通过下标）支持快速随机访问（O(1)），但增删较耗时（O(n)）
		主要形式：数组
	链式存储：
		意义：不支持随机访问（O(n)），但增删较省时（指查找后的纯增删为O(1)）
		主要形式：单链表（引入头结点可简化操作）、循环链表（使用尾指针而非头指针）、双链表（对单链表增加前驱指针）、双循环链表

栈（后进先出，LIFO）：
	用数组实现
	用链表实现
	可将递归算法转成非递归算法

队列（先进先出，FIFO）：
	用数组实现：非循环和循环形式
	用链表实现：只有一种形式

串：
	实现：数组（有静态和动态之分，主要看总长度能否预先知道）、链表（太费空间，极少使用）
	模式匹配算法：KMP

广义表：
	前导知识：特殊矩阵、稀疏矩阵
	定义、存储结构、递归算法

树和二叉树：
	树的存储结构：双亲表示法、孩子表示法、孩子兄弟表示法
	二叉树性质
	二叉树存储结构：顺序、链表
	二叉树遍历：前序、中序、后序
	线索二叉树
	树、森林、二叉树之间的转换
	哈夫曼树和哈夫曼编码：主要用于压缩数据

图：
	定义
	存储结构：数组、邻接表、十字链表、邻接多重表
	遍历：深度优先、广度优先
	连通性判断
	有向无环图
	最短路径

动态存储管理：
	主要用于资源回收？
	边界标识法、伙伴系统：均有分配算法、回收算法

查找：
	静态查找表：
		顺序表、有序表、静态树表、索引顺序表
	动态查找表：
		二叉排序树、平衡二叉树、B－树、B+树、键树
	哈希表

排序：
	内排序：
		插入排序：直接插入、其他插入、Shell排序
		选择排序：简单选择、树形选择、堆
		快速排序：重点
		归并排序
		基数排序：多关键字、链式基数
	外排序：
		多路平衡归并
		置换－选择
		最佳归并树

文件：
	顺序文件
	索引文件
	ISAM、VSAM文件
	散列文件
	多关键字文件：多重表、倒排